// <auto-generated />
using KnjigaAutorCRUD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KnjigaAutorCRUD.Migrations
{
    [DbContext(typeof(AutorKnjigaDbContext))]
    partial class AutorKnjigaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.AutorKnjiga", b =>
                {
                    b.Property<int>("KnjigaId")
                        .HasColumnType("integer");

                    b.Property<int>("AutorId")
                        .HasColumnType("integer");

                    b.HasKey("KnjigaId", "AutorId");

                    b.HasIndex("AutorId");

                    b.ToTable("AutoriKnjige");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Izdavac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Izdavaci");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Knjiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GodinaIzdanja")
                        .HasColumnType("integer");

                    b.Property<int?>("IzdavacId")
                        .HasColumnType("integer");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IzdavacId");

                    b.ToTable("Knjige");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.AutorKnjiga", b =>
                {
                    b.HasOne("KnjigaAutorCRUD.Models.Autor", "Autor")
                        .WithMany("AutoriKnjige")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KnjigaAutorCRUD.Models.Knjiga", "Knjiga")
                        .WithMany("AutoriKnjige")
                        .HasForeignKey("KnjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Knjiga", b =>
                {
                    b.HasOne("KnjigaAutorCRUD.Models.Izdavac", "Izdavac")
                        .WithMany("Knjige")
                        .HasForeignKey("IzdavacId");

                    b.Navigation("Izdavac");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Autor", b =>
                {
                    b.Navigation("AutoriKnjige");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Izdavac", b =>
                {
                    b.Navigation("Knjige");
                });

            modelBuilder.Entity("KnjigaAutorCRUD.Models.Knjiga", b =>
                {
                    b.Navigation("AutoriKnjige");
                });
#pragma warning restore 612, 618
        }
    }
}
